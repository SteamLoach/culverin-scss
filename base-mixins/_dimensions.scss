/*************************************
***********WIDTH & HEIGHT************
************************************/

//Column based mixins take an integer between one and the value of $grid-columns
//(see config partial) and return a percentage value
@mixin column($column) {width: 100%/$grid-columns * $column;}

@mixin column-break($breakpoint, $column) {
  @media screen and (min-width: $breakpoint) {
    width: 100% / $grid-columns * $column;
  }
}

//'custom' width mixin takes a breakpoint and a width value with a unit
@mixin custom-break($breakpoint, $width) {
  @media screen and (min-width: $breakpoint) {
    width: $width;
  }
}

@mixin column-scale($mobile-break: null, $fablet-break: null, $tablet-break: null, $laptop-break: null, $desktop-break: null) {
  
  @if $mobile-break != null {@include column($mobile-break)}
  @if $fablet-break != null {@include column-break($fablet, $fablet-break)}
  @if $tablet-break != null {@include column-break($tablet, $tablet-break)}
  @if $laptop-break != null {@include column-break($laptop, $laptop-break)}
  @if $desktop-break != null {@include column-break($desktop, $desktop-break)}
  
}

//height mixin takes a breakpoint and a height value with a unit
@mixin height-break($breakpoint, $height) {
  @media screen and (min-width: $breakpoint) {
    height: $height;
  }
}



/****MULTI ITEM ROWS****/

@mixin items-per-row($items) {
  @include column(22);
    @include column-break($fablet, 20);
      @include column-break($tablet, 11);
  
  @if $items == 3 {
        @include column-break($laptop, 7);
  }  
  
  @if $items == 4 {
        @include column-break($laptop, 7);
          @include column-break($desktop, 5);
  }
}


